{"0": {
    "doc": "About",
    "title": "About",
    "content": "This is the base Jekyll theme. You can find out more info about customizing your Jekyll theme, as well as basic Jekyll usage documentation at jekyllrb.com . You can find the source code for Minima at GitHub: jekyll / minima . You can find the source code for Jekyll at GitHub: jekyll / jekyll . ",
    "url": "http://localhost:4000/about/",
    "relUrl": "/about/"
  },"1": {
    "doc": "Kubernetes",
    "title": "Kubernetes",
    "content": ". | Linking EKS with acs cli | Setup dashboard | Get token for dashboard | Connect to dashboard | Add secret to a private registry | . ",
    "url": "http://localhost:4000/K8S/",
    "relUrl": "/K8S/"
  },"2": {
    "doc": "Kubernetes",
    "title": "Linking EKS with acs cli",
    "content": "aws eks --region us-east-2 update-kubeconfig --name eksCLusterName . Replace region name and eksClusterName with cluster name . ",
    "url": "http://localhost:4000/K8S/#linking-eks-with-acs-cli",
    "relUrl": "/K8S/#linking-eks-with-acs-cli"
  },"3": {
    "doc": "Kubernetes",
    "title": "Setup dashboard",
    "content": "Download last metrics server release: https://github.com/kubernetes-sigs/metrics-server/releases . Then extract and run: . kubectl apply -f metrics-server-0.3.7/deploy/1.8+/ . To check install is a success: kubectl get deployment metrics-server -n kube-system . Then install dashboard: https://github.com/kubernetes/dashboard/releases . kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.3/aio/deploy/recommended.yaml . Then apply RBAC: kubectl apply -f https://raw.githubusercontent.com/hashicorp/learn-terraform-provision-eks-cluster/master/kubernetes-dashboard-admin.rbac.yaml . ",
    "url": "http://localhost:4000/K8S/#setup-dashboard",
    "relUrl": "/K8S/#setup-dashboard"
  },"4": {
    "doc": "Kubernetes",
    "title": "Get token for dashboard",
    "content": "kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk '{print $1}') . Replace admin-user with right user . ",
    "url": "http://localhost:4000/K8S/#get-token-for-dashboard",
    "relUrl": "/K8S/#get-token-for-dashboard"
  },"5": {
    "doc": "Kubernetes",
    "title": "Connect to dashboard",
    "content": "kubectl proxy . Then go to http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/ . ",
    "url": "http://localhost:4000/K8S/#connect-to-dashboard",
    "relUrl": "/K8S/#connect-to-dashboard"
  },"6": {
    "doc": "Kubernetes",
    "title": "Add secret to a private registry",
    "content": "First, generate a deploy tokens into the project / group : settings &gt; repository &gt; Deploy tokens. Check only read registry . kubectl create secret docker-registry registry.gitlab.com --docker-server=https://registry.gitlab.com --docker-username=gitlab+deploy-token-xxxxxx --docker-password=mypassword --docker-email=mymail@mysam.co . Then into the pod yml add: . spec: containers: - name: example image: 'registry.gitlab.com/my-sam/devops/environment/nginx:latest' ports: - containerPort: 80 protocol: TCP resources: limits: cpu: 500m memory: 512Mi requests: cpu: 250m memory: 50Mi terminationMessagePath: /dev/termination-log terminationMessagePolicy: File imagePullPolicy: IfNotPresent restartPolicy: Always terminationGracePeriodSeconds: 30 dnsPolicy: ClusterFirst serviceAccountName: default serviceAccount: default automountServiceAccountToken: false nodeName: ip-10-0-2-218.us-east-2.compute.internal shareProcessNamespace: false securityContext: {} imagePullSecrets: - name: registry.gitlab.com . ",
    "url": "http://localhost:4000/K8S/#add-secret-to-a-private-registry",
    "relUrl": "/K8S/#add-secret-to-a-private-registry"
  }
}
